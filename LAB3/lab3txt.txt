%%uwagi co do kolosa%%%
%% [y,x,z] w octave
%% jak jest nazwa.* to dac taka sama
%% myslec 

0|1|2|3|4|5|6|7|8|9|  
wy = LUT[we+1]   wy - wyjscie we - wejscie
2|3|4|5|6|7|8|9|10|11|  +2
2|3|4|5|6|7|8|9|9|9|
wy = LUT[we-3] 
-3|-2|-1|0|1|2|3|4|5|6| -3
0|0|0|0|1|2|3|4|5|6| przycinanie
dwa na raz
0|0|1|2|3|4|5|6|6|6| tak wyszlo bo sie poprzycinalo od razu przy iteracji
tablice LUT mozemy zrobic dla wszystkich kolorow razem albo dla kazdego osobno
sublot mozna uzywac zeby porownywac obrazki

%zad1
image = imread('rzeczka2.png');
img = double(image)/255;
gamma = 0.7;
img_corrected = img .^ (1/gamma);

img_corrected_uint8 = uint8(img_corrected *255);

figure;
subplot(1,2,1);
imshow(img);
title('przed zmiana')
subplot(1,2,2);
imshow(img_corrected_uint8);
title('po zmianach');

%zad2 
image = imread('rzeczka2.png');
img = double(image)/255;
gamma = 1.5;
img_corrected = img .^ (1/gamma);

img_corrected_uint8 = uint8(img_corrected *255);

figure;
subplot(1,2,1);
imshow(img);
title('przed zmiana')
subplot(1,2,2);
imshow(img_corrected_uint8);
title('po zmianach');

%zad3
function zad1()
    img = imread('rzeczka2.png');
    img_double = double(img); 
 
    wspJasnosci_neg = -50; 
    wspJasnosci_zero = 0;  
    wspJasnosci_pos = 50;
 
    img_neg = ZmienJasnosc(img_double, wspJasnosci_neg);
    img_zero = ZmienJasnosc(img_double, wspJasnosci_zero);
    img_pos = ZmienJasnosc(img_double, wspJasnosci_pos);
 
    figure;
 
    subplot(1, 3, 1);
    imshow(uint8(img_neg));
    title('Jasność -50');
 
    subplot(1, 3, 2);
    imshow(uint8(img_zero));
    title('Oryginalny');
 
    subplot(1, 3, 3);
    imshow(uint8(img_pos));
    title('Jasność +50');
end
 
function output = ZmienJasnosc(input, wspJasnosci)
    output = input + wspJasnosci;
    output = PrzytnijZakres(output);
end
 
function output = PrzytnijZakres(input)
    output = zeros(size(input));
    for i = 1:numel(input)
        if input(i) < 0
            output(i) = 0;
        elseif input(i) > 255
            output(i) = 255;
        else
            output(i) = input(i);
        end
    end
end

zad1();
%zad4
LUT = min(255, max(0, (0:255) + 50));
function wyjscie = LUT_zastosuj(wejscie, LUT)
    wejscie_przyciete = round(max(0, min(255, wejscie)));
    wyjscie = LUT(wejscie_przyciete + 1);
end

obraz = imread('rzeczka2.png');

obraz = double(obraz);

obraz_przeksztalcony = LUT_zastosuj(obraz, LUT);

figure;
subplot(1,2,1);
imshow(uint8(obraz));
title('org')
subplot(1,2,2);
imshow(uint8(obraz_przeksztalcony));
title('LUT z jasn +50');

%zad5
gamma = 1.5;
zakres = 255;

LUT_gamma = uint8(round(zakres * ((0:zakres) / zakres).^(1 / gamma)));

function wyjscie = LUT_zastosuj(wejscie, LUT)
    wejscie_przyciete = round(max(0, min(255, wejscie)));
    wyjscie = LUT(wejscie_przyciete + 1);
end


obraz = imread('rzeczka2.png');
obraz = double(obraz);

obraz_przeksztalcony = LUT_zastosuj(obraz, LUT_gamma);

subplot(1, 2, 1);
imshow(uint8(obraz));
title('Oryginalny obrazek');
subplot(1, 2, 2);
imshow(uint8(obraz_przeksztalcony));
title('LUT z gamma 1.5');

figure;
plot(0:zakres, LUT_gamma, '-b');
xlabel('Wartość wejściowa');
ylabel('Wartość wyjściowa po korekcji gamma 1.5');
title('Tablica LUT dla gamma 1.5');
grid on;

%zad6
wspKontrastu_plus = 60;
wspKontrastu_minus = -60;
zakres = 255;
srodek = 127.5;
wspMn_plus = ((zakres + wspKontrastu_plus) / zakres) ^ 2;
wspMn_minus = ((zakres + wspKontrastu_minus) / zakres) ^ 2;

LUT_org = uint8(0:zakres);
LUT_plus = uint8(round(min(255, max(0, srodek + ((0:zakres) - srodek) * wspMn_plus))));
LUT_minus = uint8(round(min(255, max(0, srodek + ((0:zakres) - srodek) * wspMn_minus))));

function wyjscie = LUT_zastosuj(wejscie, LUT)
    wejscie_przyciete = round(max(0, min(255, wejscie)));
    wyjscie = LUT(wejscie_przyciete + 1);
end

obraz = imread('rzeczka2.png');
obraz = double(obraz);

obraz_kontrast_plus = LUT_zastosuj(obraz, LUT_plus);
obraz_kontrast_minus = LUT_zastosuj(obraz, LUT_minus);

subplot(1, 3, 1);
imshow(uint8(obraz_kontrast_minus));
title('Kontrast -60');

subplot(1, 3, 2);
imshow(uint8(obraz));
title('org');

subplot(1, 3, 3);
imshow(uint8(obraz_kontrast_plus));
title('Kontrast +60');

figure;
plot(0:zakres, LUT_plus, '-b', 'DisplayName', 'Kontrast +60');
hold on;
plot(0:zakres, LUT_org, '-g', 'DisplayName', 'org');
plot(0:zakres, LUT_minus, '-r', 'DisplayName', 'Kontrast -60');
xlabel('Wartość wejściowa');
ylabel('Wartość wyjściowa');
title('Tablice LUT dla kontrastu +60 i -60');
legend;
grid on;
hold off;

%zad7
img_uint8 = imread('rzeczka2.png');
obraz = double(img_uint8);

function LUT = stworz_LUT_kolor(kolor)
    LUT = (0:255);

    if kolor == 'R'
        punkty = [0, 0; 60, 120; 110, 110; 255, 255];
    elseif kolor == 'G'
        punkty = [0, 0; 255, 255];
    elseif kolor == 'B'
        punkty = [0, 0; 50, 0; 255, 255];
    end

    for i = 1:length(punkty) - 1
        x1 = punkty(i, 1);
        y1 = punkty(i, 2);
        x2 = punkty(i + 1, 1);
        y2 = punkty(i + 1, 2);

        a = (y2 - y1) / (x2 - x1);
        b = y1 - a * x1;

        for x = x1:x2
            y = round(a * x + b);
            LUT(x + 1) = y;
        end
    end
end
function obraz_wynikowy = LUT_zastosuj_kolor(wejscie, LUT, kolor)
    obraz_wynikowy = wejscie;
    if kolor == 'R'
        obraz_wynikowy(:, :, 1) = LUT(wejscie(:, :, 1) + 1);
    elseif kolor == 'G'
        obraz_wynikowy(:, :, 2) = LUT(wejscie(:, :, 2) + 1);
    elseif kolor == 'B'
        obraz_wynikowy(:, :, 3) = LUT(wejscie(:, :, 3) + 1);
    end
end
LUT_czerwony = stworz_LUT_kolor('R');
LUT_zielony = stworz_LUT_kolor('G');
LUT_niebieski = stworz_LUT_kolor('B');

obraz_wynikowy = obraz;
obraz_wynikowy = LUT_zastosuj_kolor(obraz_wynikowy, LUT_czerwony, 'R');
obraz_wynikowy = LUT_zastosuj_kolor(obraz_wynikowy, LUT_zielony, 'G');
obraz_wynikowy = LUT_zastosuj_kolor(obraz_wynikowy, LUT_niebieski, 'B');

subplot(1, 2, 1);
imshow(obraz/255);
title('Oryginalny obraz');

subplot(1, 2, 2);
imshow(obraz_wynikowy/255);
title('Po zastosowaniu LUT');

figure;
plot(0:255, LUT_czerwony, '-r', 'DisplayName', 'czerwony');
hold on;
plot(0:255, LUT_zielony, 'g', 'DisplayName', 'zielony');
plot(0:255, LUT_niebieski, 'b', 'DisplayName', 'niebieski');
xlabel('Wartość wejściowa');
ylabel('Wartość wyjściowa');
title('Tablice LUT dla dziwnego przeksztalcenia');
legend;
grid on;
hold off;
