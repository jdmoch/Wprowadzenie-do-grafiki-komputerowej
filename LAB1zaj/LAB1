KOLOKWIUM 16 PAZDZIERNIKA

SKRYPT

clear
clear all
clc

abc = 123;
vv = 1:10

abc = 456
abc = 99;

clear; clc

tab=11:13

for zm = tab
  disp(" iteracja");
  disp (zm)
  end;

  clc;
  mac = [1 2 3; 4 5 6];
  
 for zm = mac
   disp(" iteracja");
   disp (zm)
end;

clc;
tab= (11:13)'

for zm = 1:10
   disp(" iteracja");
   disp (zm)
end;


KONSOLA

>> (tab>15)
ans =

  0  0  0  0  0  1  1  1  1  1

>> tab(tab>15)
ans =

   16   17   18   19   20

>> tab(tab>15) = 15.5
tab =

   11.000   12.000   13.000   14.000   15.000   15.500   15.500   15.500   15.500   15.500

>> tab
tab =

 Columns 1 through 6:

   11.000   12.000   13.000   14.000   15.000   15.500

 Columns 7 through 10:

   15.500   15.500   15.500   15.500

>> a = [ 1 2 3 ... 4 5 6 ]
a
;
]
error: 'a' undefined near line 2, column 2
>> a = [1 2 3 ...
4 5 6
]
a =

   1   2   3   4   5   6

>> tab(end+1) = 99
tab =

   11.000   12.000   13.000   14.000   15.000   15.500   15.500   15.500   15.500   15.500   99.000

>> clear tab
>> tab
error: 'tab' undefined near line 1, column 1
>> mac = [ 1 2 3; 4 5 6]
mac =

   1   2   3
   4   5   6

>> tab=[11:20]
tab =

   11   12   13   14   15   16   17   18   19   20

>> mac ; mac
mac =

   1   2   3
   4   5   6

>> [mac;mac]
ans =

   1   2   3
   4   5   6
   1   2   3
   4   5   6

>> [mac mac]
ans =

   1   2   3   1   2   3
   4   5   6   4   5   6

>> mac
mac =

   1   2   3
   4   5   6

>> mac (2,1)
ans = 4

>> mac * 10
ans =

   10   20   30
   40   50   60

>> mac .* [10; 100]
ans =

    10    20    30
   400   500   600

>> sum(mac,2)
ans =

    6
   15

>> [10;100]
ans =

    10
   100

>> sum(mac,1)
ans =

   5   7   9

>> tab
tab =

   11
   12
   13

>>
>> sum(tab)
ans = 36
>> sum(tab,2)
ans =

   11
   12
   13

>> sum(mac,2)
ans =

    6
   15

>> tabp= [3; 4; 5]
tabp =

   3
   4
   5

>> vec(tabp)
ans =

   3
   4
   5

>> vec(tab)
ans =

   11
   12
   13

>> vec(tab)'
ans =

   11   12   13

>> vec(tabp)'
ans =

   3   4   5

>> mac
mac =

   1   2   3
   4   5   6

>> mac >= 5
ans =

  0  0  0
  0  1  1

>> mac(mac >= 5)
ans =

   5
   6

>> mac(3)
ans = 2
>> mac(4)
ans = 5
>> tab=[11:20]
tab =

   11   12   13   14   15   16   17   18   19   20

>> tab >12 & tab< 18
ans =

  0  0  1  1  1  1  1  0  0  0

>> tab>12 & tab<18
ans =

  0  0  1  1  1  1  1  0  0  0

>> tab>12 && tab<18
ans = 0
>> tab> 12 & tab<18
ans =

  0  0  1  1  1  1  1  0  0  0

>> (tab> 12) & tab<18
ans =

  0  0  1  1  1  1  1  0  0  0

>> tab((tab> 12) & tab<18)
ans =

   13   14   15   16   17

>> tab ( [0 0 1 1 1 1 1 1 0 0 0] )
error: tab(0): subscripts must be either integers 1 to (2^63)-1 or logicals
>> tab ( [0 0 1 1 1 1 1 0 0 0] )
error: tab(0): subscripts must be either integers 1 to (2^63)-1 or logicals
>> (tab> 12) & tab<18
ans =

  0  0  1  1  1  1  1  0  0  0

>> find(tab>12 & tab<18)
ans =

   3   4   5   6   7

>>


------------------

... - przeniesnie do nastepnej linijki
tab(tab>15) wieksze niz 
tab(end+1) = 99 dodanie czegos na koniec (nie powinno sie tak robic)
clear tab - wyczyszono zmeinna tab
mac = [1 2 3; 4 5 6] - macierz 123 dol 456
>> [mac ; mac] - zlaczenie w pionie
[mac mac] - zlaczenie w poziomie
>> mac (y,x) - tak dzialaja wspolrzedne i nie jest od 0 [indeksowanie od 1]
>> mac(2,:) - dostep do dolnego wiersza
mac(end,:) - ostatni dostep
>> mac(:,[1 3])
   1   3
   4   6
>> mac(:,[3 1])
   3   1
   6   4
>> tab = 11:3:20
   11   14   17   20
>> tab = 11:2:20
   11   13   15   17   19
tab(1:end-1) - ostatni element -1 wyswietlanie
tab(30) = 99 - spoza zakresu to uzupelnia tablice do 30 miejsca

tab = 11:13

for zm = tab 
  disp("iteracja");
  disp(zm)
end;

mac = [1 2 3; 4 5 6];
for zm = mac
  disp("iteracja");
  disp(zm)
end;

for zm = 1:10
  disp("iteracja");
  disp(zm)
end;

tab = (11:13)'
for zm = tab
  disp("iteracja");
  disp(zm)
end;

mac*10 -- powieksza macierz razy 10 ale nie zmienia jej
Ì€>> mac .* [10;100]
ans =

    10    20    30
   400   500   600

operatory agregujace: max,min,suma
sum(mac) - dodal kolumny
sum(mac,2) - dodal wiersze
>> vec(tabp)
ans =
   3
   4
   5

>> vec(tabp)'
ans =
   3   4   5

>> tab(tab >12 & tab<18)
ans =

   13   14   15   16   17
